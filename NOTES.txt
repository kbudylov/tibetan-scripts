+------+
| 1    |
|      |
|      |
+------+


page 1: top of 1st page, 2nd side, upside-down
page 2: top of 1st page, 1st side, right-side up
page 3: bottom 1st page, 1st side, right-side up
page 4: bottom 1st page, 2nd side, upside-down

+------+
| 1 +------+
|   | 2    |
|   |      |
+---|      |
    +------+

page 1: top of 1st page, 2nd side, upside-down
page 2: top of 1st page, 1st side, right-side up
page 3: top of 2nd page, 2nd side, upside-down
page 4: top of 2nd page, 1st side, right-side up
page 5: bottom of 2nd page, 1st side, right-side up
page 6: bottom of 2nd page, 2nd side, upside-down
page 7: bottom of 1st page, 1st side, right-side up
page 8: bottom of 1st page, 2nd side, upside-down

+------+
| 1 +------+
|   | 2 +------+
|   |   | 3    |
+---|   |      |
    +---|      |
        +------+

page 1: top of 1st page, 2nd side, upside-down
page 2: top of 1st page, 1st side, right-side up
page 3: top of 2nd page, 2nd side, upside-down
page 4: top of 2nd page, 1st side, right-side up


Mapping Logic:

Total Pecha Pages (tpp)
Total Actual Pages (tap): c, r = divmod(tpp, 4); c if r == 0 else c + 1
Orientation: if current page <= (tpp / 2) start with upside and 2nd side, else start with right-side and 1st side

startingSide
orientation
pechaPage
actualPage

totalPechaPages = 14
div, mod = divmod(totalPechaPages, 4)
if mod == 0:
  totalActualPages = div
else:
  totalActualPages = div + 1

for currentPage in xrange(1, totalPechaPages + 1):
  if currentPage <= totalPechaPages / 2.0:
    firstHalf = True
  else:
    firstHalf = False
  secondHalf = not firstHalf
  if firstHalf:
    currentActualPage = int(currentPage / 2.0 + 0.5)
  else:
    currentActualPage = totalPechaPages - int(currentPage / 2.0 + 0.5) - 3
  if ((firstHalf and (currentPage % 2) == 1) or (secondHalf and (currentPage % 2) == 0)):
    orientation = 'upsidedown'
    side = '2nd'
  else:
    orientation = 'rightsideup'
    side = '1st'
  print currentPage, currentActualPage, side, orientation, firstHalf, secondHalf

page 1: top of 1st page, 2nd side, upside-down
page 2: top of 1st page, 1st side, right-side up
page 3: top of 2nd page, 2nd side, upside-down
page 4: top of 2nd page, 1st side, right-side up
page 5: bottom of 2nd page, 1st side, right-side up
page 6: bottom of 2nd page, 2nd side, upside-down
page 7: bottom of 1st page, 1st side, right-side up
page 8: bottom of 1st page, 2nd side, upside-down

sheet 1 | front | top | block 2 | rightside-up
sheet 1 | front | bottom | block 7 | rightside-up
sheet 1 | back | top | block 1 | upside-down
sheet 1 | back | bottom | block 8 | upside-down
sheet 2 | front | top | block 4 | rightside-up
sheet 2 | front | bottom | block block 5 | rightside-up
sheet 2 | back | top | block 3 | upside-down
sheet 2 | back | bottom | block 6 | upside-down

2   inner a + 1         front
7   inner n - 1         front
1   outer a             back
8   outer n             back
4   inner (a+2) + 1     front
5   inner (n-2) - 1     front
3   outer (a+2)         back
6   outer (n-2)         back

(MIN + 2 * (SHEET - 1)) + 1
(MAX - 2 * (SHEET - 1)) - 1
(MIN + 2 * (SHEET - 1))
(MAX - 2 * (SHEET - 1))


(MIN + 2 * (SHEET - 1)) + (1 * abs(SIDE - 1))
(MAX - 2 * (SHEET - 1)) - (1 * abs(SIDE - 1))

2 - 1 = +1
2 - 3 = -1

-1 * -1 = +1
-1 * 1 = -1

(0 * -1) + 1 = +1
(2 * -1) + 1 = -1

(0 * 7) + 1 = 1
(1 * 7) + 1 = 8

(MINMAX + ((LOC * 2 * -1) + 1) * 2 * (SHEET - 1)) + ((LOC * 2 * -1) + 1) * (1 * abs(SIDE - 1))

MIN = 1
MAX = 8
for SHEET in xrange(1, 2 + 1):
  print (MIN + 2 * (SHEET - 1)) + 1
  print (MAX - 2 * (SHEET - 1)) - 1
  print (MIN + 2 * (SHEET - 1))
  print (MAX - 2 * (SHEET - 1))

for SHEET in xrange(1, 2 + 1):
  for SIDE in xrange(2):
    print (MIN + 2 * (SHEET - 1)) + (abs(SIDE - 1))
    print (MAX - 2 * (SHEET - 1)) - (abs(SIDE - 1))

for SHEET in xrange(1, 2 + 1):
  for SIDE in xrange(2):
    for LOC in xrange(2):
      print (MAX - 2 * (SHEET - 1)) - (abs(SIDE - 1))

for SHEET in xrange(1, 2 + 1):
  for SIDE in xrange(2):
    sideMod = abs(SIDE - 1)
    for LOC in xrange(2):
        signMod = ((LOC * 2 * -1) + 1)
        minmaxMod = ((LOC * 7) + 1)
        BLOCK = (minmaxMod + 2 * signMod * (SHEET - 1)) + sideMod * signMod
        print BLOCK

SHEET = 2
for SIDE in xrange(2):
  sideMod = abs(SIDE - 1)
  for LOC in xrange(2):
      signMod = ((LOC * 2 * -1) + 1)
      minmaxMod = ((LOC * 7) + 1)
      BLOCK = (minmaxMod + 2 * signMod * (SHEET - 1)) + sideMod * signMod
      print BLOCK

i = 0
for SHEET in xrange(1, int(ceil(MAX/4.0)) + 1):
  for SIDE in xrange(2):
    sideMod = abs(SIDE - 1)
    for LOC in xrange(2):
        signMod = ((LOC * 2 * -1) + 1)
        minmaxMod = ((LOC * (MAX - 1)) + 1)
        BLOCK = (minmaxMod + 2 * signMod * (SHEET - 1)) + sideMod * signMod
        i += 1
        print i, BLOCK, (SHEET, SIDE, LOC)

for SHEET in xrange(1, int(ceil(MAX/4.0)) + 1):
  for SIDE in xrange(2):
    for LOC in xrange(2):
      (((LOC * (MAX - 1)) + 1) + 2 * ((LOC * 2 * -1) + 1) * (SHEET - 1)) + ((LOC * 2 * -1) + 1) * (abs(SIDE - 1))

1 Sheet (between 1 and 4 blocks)
+------+
| 1    |
|......|
|      |
+------+

sheet 1 | front | top | block 2 | rightside-up          2
sheet 1 | front | bottom | block 3 | rightside-up       3
sheet 1 | back | top | block 1 | upside-down            1
sheet 1 | back | bottom | block 4 | upside-down         4



2 Sheets (between 5 and 8 blocks)
+------+
| 1 +------+
|...| 2    |
|   |......|
+---|      |
    +------+

sheet 1 | front | top | block 2 | rightside-up          2
sheet 1 | front | bottom | block 7 | rightside-up       7
sheet 1 | back | top | block 1 | upside-down            1
sheet 1 | back | bottom | block 8 | upside-down         8
sheet 2 | front | top | block 4 | rightside-up          4
sheet 2 | front | bottom | block block 5 | rightside-up 5
sheet 2 | back | top | block 3 | upside-down            3
sheet 2 | back | bottom | block 6 | upside-down         6


3 Sheets (between 9 and 12 blocks)
+------+
| 1 +------+
|...| 2 +------+
|   |...| 3    |
+---|   |......|
    +---|      |
        +------+

sheet 1 | front | top | block 2 | rightside-up          2
sheet 1 | front | bottom | block 11 | rightside-up      11
sheet 1 | back | top | block 1 | upside-down            1
sheet 1 | back | bottom | block 12 | upside-down        12
sheet 2 | front | top | block 4 | rightside-up          4
sheet 2 | front | bottom | block block 9 | rightside-up 9
sheet 2 | back | top | block 3 | upside-down            3
sheet 2 | back | bottom | block 10 | upside-down        10
sheet 3 | front | top | block 6 | rightside-up          6
sheet 3 | front | bottom | block 7 | rightside-up       7
sheet 3 | back | top | block 5 | upside-down            5
sheet 3 | back | bottom | block 8 | upside-down         8


4 Sheets (between 13 and 16 blocks)
+------+
| 1 +------+
|...| 2 +------+
|   |...| 3 +------+
+---|   |...| 4    |
    +---|   |......|
        +---|      |
            +------+

sheet 1 | front | top | block 2 | rightside-up          2
sheet 1 | front | bottom | block 15 | rightside-up      15
sheet 1 | back | top | block 1 | upside-down            1
sheet 1 | back | bottom | block 16 | upside-down        16
sheet 2 | front | top | block 4 | rightside-up          4
sheet 2 | front | bottom | block block 9 | rightside-up 13
sheet 2 | back | top | block 3 | upside-down            3
sheet 2 | back | bottom | block 14 | upside-down        14
sheet 3 | front | top | block 6 | rightside-up          6
sheet 3 | front | bottom | block 11 | rightside-up      11
sheet 3 | back | top | block 5 | upside-down            5
sheet 3 | back | bottom | block 12 | upside-down        12
sheet 4 | front | top | block 8 | rightside-up          8
sheet 4 | front | bottom | block 9 | rightside-up       9
sheet 4 | back | top | block 7 | upside-down            7
sheet 4 | back | bottom | block 10 | upside-down        10



